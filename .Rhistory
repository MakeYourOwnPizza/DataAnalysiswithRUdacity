# 1. Subset the data (males only).
male <- table(acl$Gender=='M',)
# Let’s break this question down into the different descriptive statistics that you will
#need to construct your answer.  Be sure that your R output includes all of the following components.
# 1. Subset the data (males only).
male <- table(acl$Gender=='M',)
# Let’s break this question down into the different descriptive statistics that you will
#need to construct your answer.  Be sure that your R output includes all of the following components.
# 1. Subset the data (males only).
male <- table(acl$Gender==M,)
# Let’s break this question down into the different descriptive statistics that you will
#need to construct your answer.  Be sure that your R output includes all of the following components.
# 1. Subset the data (males only).
male <- acl[acl$Gender=='M',]
# 2. Create a table to show the marginal distributions for Genre and Grammy.
genre <- table(male$Genre)
genre
grammy <- table(male$Grammy)
grammy
# 3. Create a contingency table to show the conditional distribution for Genre and Grammy.
twoway <- table(genre,grammy)
# 3. Create a contingency table to show the conditional distribution for Genre and Grammy.
twoway <- table(male$Genre,table$Grammy)
# 3. Create a contingency table to show the conditional distribution for Genre and Grammy.
twoway <- table(male$Genre,male$Grammy)
# 4. Make a bar chart to better visualize how many artists in each Genre received a Grammy.
barplot(twoway)
# 3. Create a contingency table to show the conditional distribution for Genre and Grammy.
twoway <- table(male$Grammy,male$Genre)
# 4. Make a bar chart to better visualize how many artists in each Genre received a Grammy.
barplot(twoway)
# 4. Make a bar chart to better visualize how many artists in each Genre received a Grammy.
barplot(twoway,legend=T,beside=T, main='Genre by Grammy winners',xlab='Genre',ylab='Counts')
# 5. Calculate P(A):  the probability of winning a Grammy.
prop.table(grammy)
# 6. Calculate P(A|B): the probability of winning Grammy, given the artist's Genre.
prop.table(twoway,2)
grammy
twoway
# 4) What is the probability that a randomly selected artist was a Grammy winner?
prop.table(twoway)
# 4) What is the probability that a randomly selected artist was a Grammy winner?
prop.table(grammy)
# 5) To determine the probability of winning a Grammy if the artist
#was a singer-songwriter, you would divide _______ by ________.
prop.table(twoway,2)
# 5) To determine the probability of winning a Grammy if the artist
#was a singer-songwriter, you would divide _______ by ________.
twoway
genre
# 6) To determine the probability that a randomly-selected Grammy
#winner was a singer-songwriter, you would divide ________ by ________.
grammy
genre
# 6) To determine the probability that a randomly-selected Grammy
#winner was a singer-songwriter, you would divide ________ by ________.
twoway
grammy
View(male)
# What is the probability that a randomly selected male artist
#from each of the following genres won a Grammy?
# 7a. Country?
# 7b. Jazz?
# 7c. Rock/folk/indie?
# 7d. Singer-songwriter?
prop.table(twoway,2)
# 4. Make a bar chart to better visualize how many artists in each Genre received a Grammy.
barplot(twoway,legend=T,beside=T, main='Genre by Grammy winners',xlab='Genre',ylab='Counts')
# Problem Set
# Question 1
# You want to see if an artist's popularity on Facebook
# #(whether or not they have 100,000 or more likes) has anything to do with their age.
# 1.  Generate a table to show the number of artists that are "popular" and those that are not.
popular <- acl[acl$Facebook.100k==1,]
unpopular <- acl[acl$Facebook.100k==0,]
# 2.  Generate a table to show the number of "popular" artists within each age group.
table(popular$Age.Group)
# 2.  Generate a table to show the number of "popular" artists within each age group.
popularbyage <- table(popular$Age.Group)
# 1c. For each age group, fill in the proportion of artists who have 100,000 or more likes on Facebook.
prop.table(popularbyage)
popularbyage
# 1c. For each age group, fill in the proportion of artists who have 100,000 or more likes on Facebook.
twoway2 <- table(acl$Age.Group,acl$Facebook.100k)
prop.table(twoway2,1)
twoway2
Week4YearGrade <- read.delim("~/GitHub/FundamentalsOfDataAnalysis1/Week4YearGrade.csv")
View(Week4YearGrade)
rm(Week4YearGrade)
Week4YearGrade <- read.delim("~/GitHub/FundamentalsOfDataAnalysis1/Week4YearGrade.csv")
View(Week4YearGrade)
rm(Week4YearGrade)
grades <- read.delim("~/GitHub/FundamentalsOfDataAnalysis1/Week4YearGrade.csv")
View(grades)
# Question 2
# An Economics professor kept a record of grades earned by the college students in his class, as shown below.
# 2b. What proportion of students in the class received a grade of A?
grade <- table(grades$A)
grade
# Question 2
# An Economics professor kept a record of grades earned by the college students in his class, as shown below.
# 2b. What proportion of students in the class received a grade of A?
gradea <- table(grades$A)
rm(grade)
prop.table(gradea)
library(SDSFoundations)
wr<-WorldRecords
rm(list=ls(all=TRUE))
library(SDSFoundations)
wr<-WorldRecords
WR<-WorldRecords
rm(wr)
View(WR)
mens800 <- WR[WR$Event=='Mens 800m,]
mens800 <- WR[WR$Event=='Mens 800m',]
mens800 <- WR[WR$Event=='Mens 800m',]
linFit(mens800$Year,mens800$Record)
#PreLAb
#Track and Field World Records
#1a. How many different types of events (e.g. "Mens 100m," "Womens shotput," etc.) are represented in the dataset?
talbe(WR)
#PreLAb
#Track and Field World Records
#1a. How many different types of events (e.g. "Mens 100m," "Womens shotput," etc.) are represented in the dataset?
talbe(WR$Event)
#PreLAb
#Track and Field World Records
#1a. How many different types of events (e.g. "Mens 100m," "Womens shotput," etc.) are represented in the dataset?
table(WR$Event)
# 1. Create a subset of the dataset that contains only the World Record cases for men’s shotput.
menshot <- WR[WR$Event=='Mens Shouput']
womenshot <- WR[WR$Event=='Womens Shotput']
# 1. Create a subset of the dataset that contains only the World Record cases for men’s shotput.
menshot <- WR[WR$Event=='Mens Shotput']
# 1. Create a subset of the dataset that contains only the World Record cases for men’s shotput.
menshot <- WR[WR$Event=='Mens Shouput']
View(mens800)
View(menshot)
rm(menshot)
# 1. Create a subset of the dataset that contains only the World Record cases for men’s shotput.
menshot <- WR[WR$Event=='Mens Shotput',]
womenshot <- WR[WR$Event=='Womens Shotput',]
# 2. Create a subset that contains only the World Record cases for women's shotput.
plot(menshot$Year,menshot$Record)
# 2. Create a subset that contains only the World Record cases for women's shotput.
plot(menshot$Year,menshot$Record, main='Mens Shotput World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
plot(womenshot$Year,womenshot$Record,main='Womens Shotput World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
# 4. Confirm from these plots that a linear model is appropriate.
# 5. Run a linear model for each event and then interpret the results.
linFit(menshot$Year,menshot$Record)
linFit(womenshot$Year,womenshot$Record)
#5) Suppose we wanted to subset our dataset for only world records that were from 1990 and later. What caused the error below? (You may want to examine the dataset in R for help.)
recent <- WR[WR$Year >= 1990,]
#Lab
# Primary Research Question
# How have the world record times for the men's and the women’s mile event changed over the years?
# 1. Create a subset of the data that contains World Record cases for the men’s Mile event.
mensmile <- WR[WR$Event=='Mens Mile',]
# 2. Create a subset of the data that contains World Record cases for the women's Mile event.
womensmile <- WR[WR$Event=='Womens Mile',]
# 3. Create a scatterplot for each relationship of Mile time and year: one for men and one for women.
plot(mensmile$Year,mensmile$Record, main='Mens Mile World Records',xlab='Year',ylab='World Record Time (s)',pch=16)
plot(womensmile$Year,womensmile$Record, main='Womens Mile World Records',xlab='Year',ylab='World Record Time (s)',pch=16)
# 4. Confirm from these plots that a linear model is appropriate.
# 5. Run a linear model for each event and then interpret the results. Be sure to calculate R-squared values for each model.
linFit(mensmile$Year,mensmile$Record)
linFit(womensmile$Year,womensmile$Record)
# 2. On average, how many seconds do men trim off the world record time in the Mile each year? (Round to three decimal places)
average(mensmile$Record)
help(average)
help(avg)
# 2. On average, how many seconds do men trim off the world record time in the Mile each year? (Round to three decimal places)
mean(mensmile$Record)
# 4. How many years would you predict it would take for the men’s mile record to decrease by one full second? Use the model equation to help you answer the question.
1/0.973
# 4. How many years would you predict it would take for the men’s mile record to decrease by one full second? Use the model equation to help you answer the question.
1/0.393
# Problem Set
# Question 1
# We want to find the best-fitting linear model for men's pole vault world records since 1970.
# 1.  Create a new data frame that contains the world record cases in the men's pole vault event in years 1970 and later.
menspolevault1970 <- WR[(WR$Event=='Mens Polevault' and WR$Year>=1970),]
# Problem Set
# Question 1
# We want to find the best-fitting linear model for men's pole vault world records since 1970.
# 1.  Create a new data frame that contains the world record cases in the men's pole vault event in years 1970 and later.
menspolevault1970 <- WR[(WR$Event=='Mens Polevault' $ WR$Year>=1970),]
source('~/GitHub/FundamentalsOfDataAnalysis1/Labs/Week5Lab.R', echo=TRUE)
# Problem Set
# Question 1
# We want to find the best-fitting linear model for men's pole vault world records since 1970.
# 1.  Create a new data frame that contains the world record cases in the men's pole vault event in years 1970 and later.
menspolevault1970 <- WR[WR$Event=='Mens Polevault',]
# Problem Set
# Question 1
# We want to find the best-fitting linear model for men's pole vault world records since 1970.
# 1.  Create a new data frame that contains the world record cases in the men's pole vault event in years 1970 and later.
menspolevault <- WR[WR$Event=='Mens Polevault',]
menspolevault1970 <- menspolevault[menspolevault$Year >= 1970,]
View(menspolevault1970)
# 2. Use this data frame to answer the following questions.
# 1a. What is the standing world record height (in meters) for men's pole vault? (Round to 2 decimal places.)
max(menspolevault1970$Record)
# 1c. Create a scatterplot showing the men's pole vault records since 1970 as a function of year. Fit a linear model to the data.
plot(menspolevault1970$Year, menspolevault1970$Record, main='Mens Pole Vault World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
linFit(menspolevault1970$Year, menspolevault1970$Record)
# 3a. What is the predicted GPA of a student who spent a total of $970 on textbooks in college? (Round to 2 decimal places.)
2.84+0.04*970
# 3a. What is the predicted GPA of a student who spent a total of $970 on textbooks in college? (Round to 2 decimal places.)
2.84+0.04*970/100
3.71-2.84
# 3c. If a student spent $1,450 on textbooks and graduated with a GPA of 2.91, what is his residual? (Please indicate whether the residual is positive or negative in your response, and round to 2 decimal places.)
2.91 - (2.84+0.04*1450/100)
View(new_bull)
# 1c. Create a scatterplot showing the men's pole vault records since 1970 as a function of year. Fit a linear model to the data.
plot(menspolevault1970$Year, menspolevault1970$Record, main='Mens Pole Vault World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
library(SDSFoundations)
WR<-WorldRecords
mens800 <- WR[WR$Event=='Mens 800m',]
# Find the linear fit of model that the record as a function of year.
linFit(mens800$Year,mens800$Record)
#PreLAb
#Track and Field World Records
#1a. How many different types of events (e.g. "Mens 100m," "Womens shotput," etc.) are represented in the dataset?
table(WR$Event)
# Primary Research Question
# How has the men’s shotput world record changed over time?  What about the women’s world record?
# 1. Create a subset of the dataset that contains only the World Record cases for men’s shotput.
menshot <- WR[WR$Event=='Mens Shotput',]
# 2. Create a subset that contains only the World Record cases for women's shotput.
womenshot <- WR[WR$Event=='Womens Shotput',]
# 3. Create a scatterplot of year and record shotput distance: one for men and one for women.
plot(menshot$Year,menshot$Record, main='Mens Shotput World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
plot(womenshot$Year,womenshot$Record,main='Womens Shotput World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
# 4. Confirm from these plots that a linear model is appropriate.
# 5. Run a linear model for each event and then interpret the results.
linFit(menshot$Year,menshot$Record)
linFit(womenshot$Year,womenshot$Record)
#5) Suppose we wanted to subset our dataset for only world records that were from 1990 and later. What caused the error below? (You may want to examine the dataset in R for help.)
recent <- WR[WR$Year >= 1990,]
# problem
# 1a. How many records are in the menshot data frame?
39
# 1b. How many records in the womenshot data frame?
41
#Lab
# Primary Research Question
# How have the world record times for the men's and the women’s mile event changed over the years?
# 1. Create a subset of the data that contains World Record cases for the men’s Mile event.
mensmile <- WR[WR$Event=='Mens Mile',]
# 2. Create a subset of the data that contains World Record cases for the women's Mile event.
womensmile <- WR[WR$Event=='Womens Mile',]
# 3. Create a scatterplot for each relationship of Mile time and year: one for men and one for women.
plot(mensmile$Year,mensmile$Record, main='Mens Mile World Records',xlab='Year',ylab='World Record Time (s)',pch=16)
plot(womensmile$Year,womensmile$Record, main='Womens Mile World Records',xlab='Year',ylab='World Record Time (s)',pch=16)
# 4. Confirm from these plots that a linear model is appropriate.
# 5. Run a linear model for each event and then interpret the results. Be sure to calculate R-squared values for each model.
linFit(mensmile$Year,mensmile$Record)
linFit(womensmile$Year,womensmile$Record)
# 2. On average, how many seconds do men trim off the world record time in the Mile each year? (Round to three decimal places)
# 3. On average, how many seconds do women trim off the world record time in the Mile each year? (Round to three decimal places)
# slope of the line of best fit
# 4. How many years would you predict it would take for the men’s mile record to decrease by one full second? Use the model equation to help you answer the question.
1/0.393
# 5. How many years would you predict it would take for the women’s mile record to decrease by one full second? Use the model equation to help you answer the question.
1/0.973
# 6. What proportion of variance in the men's World Record times in the Mile can be explained by year? (Round to three decimal places)
0.977
# 7. What proportion of the variance in women's World Record times in the Mile can be explained by year? (Round to three decimal places)
0.896
# Problem Set
# Question 1
# We want to find the best-fitting linear model for men's pole vault world records since 1970.
# 1.  Create a new data frame that contains the world record cases in the men's pole vault event in years 1970 and later.
menspolevault <- WR[WR$Event=='Mens Polevault',]
menspolevault1970 <- menspolevault[menspolevault$Year >= 1970,]
# 2. Use this data frame to answer the following questions.
# 1a. What is the standing world record height (in meters) for men's pole vault? (Round to 2 decimal places.)
max(menspolevault1970$Record)
# 1b. In what year did the pole vault record first exceed 6 meters? (Look at the data to find the year.)
1986
# 1c. Create a scatterplot showing the men's pole vault records since 1970 as a function of year. Fit a linear model to the data.
plot(menspolevault1970$Year, menspolevault1970$Record, main='Mens Pole Vault World Records',xlab='Year',ylab='World Record Distance (m)',pch=16)
linFit(menspolevault1970$Year, menspolevault1970$Record)
# Report the coefficient estimates for the linear model that describes the change in the men's pole vault world record since 1970.
# 1d. What is the intercept? (Round to 3 decimal places.)
-51.854
# 1e. What is the slope? (Round to 3 decimal places.)
0.029
# 1f. Which of the following best describes how the men's pole vault world record has changed since 1970?
#The record has increased by an average of 0.03 meters per year since 1970.
# Question 3
# We have bivariate data on a group of college students: the total amount (in dollars) spent on textbooks throughout their college career, and their GPA. The following linear regression model was used to predict GPA from number of dollars (in hundreds) spent:
#   Predicted GPA = 2.84 + .04*Dollars
# 3a. What is the predicted GPA of a student who spent a total of $970 on textbooks in college? (Round to 2 decimal places.)
2.84+0.04*970/100
# 3b. If a student spent $0 on textbooks in college and graduated with a GPA of 3.71, what is her residual? (Round to 2 decimal places.)
3.71-2.84
# 3c. If a student spent $1,450 on textbooks and graduated with a GPA of 2.91, what is his residual? (Please indicate whether the residual is positive or negative in your response, and round to 2 decimal places.)
2.91 - (2.84+0.04*1450/100)
# 3d. A freshman learned of this study and calculated that she would need to spend $2,900 on textbooks to earn a 4.0 GPA. (You can confirm this calculation using the equation above). She decided to buy all of her textbooks new (rather than second-hand and cheaper) to help boost her GPA. Is she using the model in a statistically-sound way?
install.packages("swirl")
library(swirl)
swirl()
bye()
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Mengnan Zhou")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
View(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
# 10. Read the documentation for row.names if you're want to know more.
?row.names
# Run this code to change the row names of the cars to numbers.
row.names(mtcars) <- c(1:32)
# Now print out the data frame by running the code below.
mtcars
data(mtcars)
head(mtcars, 10)
# The head() fucntion prints out the first six rows of a data frame
# by default. Run the code below to see.
head(mtcars)
# I think you'll know what this does.
tail(mtcars, 3)
mtcars$mpg
# Print out any two other variables to the console.
mtcars$hp
mtcars$qsec
mean(mtcars$mpg)
?mean
x <-
(1:10,50)
x <- (1:10,50)
x <- c(1:10,50)
xm <- mean(x)
xm
c(xm,mean(x,trim=0.10))
x
?trim
getwd()
setwd('C:\Users\haoli\Dropbox\Mengnan\SMU\MOOC\R2')
setwd('C:/Users/haoli/Dropbox/Mengnan/SMU/MOOC/R2')
stateInfo <- read.csv('stateData.csv')
rm(list=ls(all=TRUE))
stateInfo <- read.csv('stateData.csv')
View(stateInfo)
View(stateInfo)
subset(stateInfo,state.region ==1)
statesInfo <- read.csv('stateData.csv')
rm(stateInfo)
subset(statesInfo,state.region == 1)
statesInfo[statesInfo$state.region == 1,]
stateSubset <- subset(statesInfo,state.region == 1)
stateSubsetBracket <- statesInfo[statesInfo$state.region == 1,]
head(stateSubset, 2)
dim(stateSubset)
head(stateSubsetBracket, 2)
dim(stateSubsetBracket)
hsgover50 <- subset(statesInfo,highSchoolGrad >= 50)
View(hsgover50)
illiteracy50 <- statesInfo[statesInfo$illiteracy >= 0.5]
illiteracy50 <- statesInfo[statesInfo$illiteracy >= 0.5,]
?cars
str(cars)
plot(cars)
plot(cars)
summary(mtcars)
view(mtcars)
efficient <- subset(mtcars, mpg >= 23)
View(efficient)
View(stateSubsetBracket)
View(stateSubsetBracket)
view(mtcars)
str(efficient)
dim(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
lightcars <- subset(mtcars, weight < 2)
View(efficient)
lightcars <- subset(mtcars, wt < 2)
count(lightcars)
nrow(lightcars)
lightcars <- subset(mtcars, wt < 2)
dim(efficient)
dim(efficient)
summary(mtcars)
efficient <- subset(mtcars, mpg >= 23)
summary(mtcars)
efficient <- subset(mtcars, mpg >= 23)
dim(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
mtcars$year <- 1974
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
install.packages('knitr', dependencies = T)
subset(mtcars, mpg >= 30 | hp < 60)
reddit <- read.csv('reddit.csv')
getwd
getwd()
setwd('C:\Users\haoli\OneDrive\Documents\GitHub\DataAnalysiswithRUdacity')
setwd('C:/Users/haoli/OneDrive/Documents/GitHub/DataAnalysiswithRUdacity')
reddit <- read.csv('reddit.csv')
rm(list=ls(all=TRUE))
reddit <- read.csv('reddit.csv')
str(reddit)
table(reddit$employment.status)
summary(reddit)
summary(reddit$employment.status)
table(reddit$employment.status)
# check the levels of a factor variable
levels(reddit$age.range)
# plot how many users in each bin
qplot(data = reddit, x=age.range)
# plot how many users in each bin
library(ggplot2)
qplot(data = reddit, x=age.range)
# plot how many users in each bin
library(ggplot2)
# plot how many users in each bin
library(SDSFoundations)
library(ggplot2)
install.packages(ggplot2)
install.packages("tidyverse")
install.packages("ggplot2")
library(ggplot2)
qplot(data = reddit, x=age.range)
summary(reddit)
str(reddit)
levels(reddit$income.range)
qplot(data = reddit, x=income.range)
?factor
qplot(data = reddit, x=age.range)
# check the levels of a factor variable
levels(reddit$age.range)
agerange <- factor(reddit$gender, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
qplot(data = agerange)
qplot(data = agerange, x = agerange)
agerange
age.f <- factor(reddit$gender, labels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
qplot(data = reddit, x = age.range, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
age.f <- factor(reddit$gender, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
qplot(age.f)
age.f
age.f <- factor(reddit$age.range, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
age.f
qplot(age.f)
# ENTER YOUR CODE BELOW THE LINE.
age.f <- factor(reddit$age.range, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
qplot(age.f)
qplot(age.f)
# ENTER YOUR CODE BELOW THE LINE.
reddit$age.range <- ordered(reddit$age.range,("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
# ENTER YOUR CODE BELOW THE LINE.
reddit$age.range <- ordered(reddit$age.range, level = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
qplot(data = reddit, x=age.range)
# Method 2: Using factor function, rearrange the age variable and plot again.
reddit$age.range <- factor(reddit$age.range, level = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"),ordered = T)
qplot(data = reddit, x=age.range)
# ENTER YOUR CODE BELOW THE LINE.
# Method 1: Using ordered funtion to rearrange the age variable and plot again.
reddit$age.range <- ordered(reddit$age.range, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
qplot(data = reddit, x=age.range)
# Method 2: Using factor function, rearrange the age variable and plot again.
reddit$age.range <- factor(reddit$age.range, levels = c("Under 18","18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"),ordered = T)
qplot(data = reddit, x=age.range)
str(reddit)
levels(reddit$income.range)
# Rearrange income range
reddit$income.range <- factor(reddit$income.range, levels= c(,"Under $20,000","$20,000 - $29,999","$30,000 - $39,999","$40,000 - $49,999" ,"$50,000 - $69,999","$70,000 - $99,999" ,"$100,000 - $149,999","$150,000 or more"),ordered = T)
# Rearrange income range
reddit$income.range <- factor(reddit$income.range, levels= c("Under $20,000","$20,000 - $29,999","$30,000 - $39,999","$40,000 - $49,999" ,"$50,000 - $69,999","$70,000 - $99,999" ,"$100,000 - $149,999","$150,000 or more"),ordered = T)
plot(reddit, x=income.range)
plot(data=reddit, x=income.range)
plot(reddit$income.range)
qplot(data=reddit, x=income.range)
reddit$income.range <- ordered(reddit$income.range, levels= c("Under $20,000","$20,000 - $29,999","$30,000 - $39,999","$40,000 - $49,999" ,"$50,000 - $69,999","$70,000 - $99,999" ,"$100,000 - $149,999","$150,000 or more"))
qplot(data=reddit, x=income.range)
reddit$income.range <- ordered(reddit$income.range, levels= c("Under $20,000","$20,000 - $29,999","$30,000 - $39,999","$40,000 - $49,999" ,"$50,000 - $69,999","$70,000 - $99,999" ,"$100,000 - $149,999","$150,000 or more"))
qplot(data=reddit, x=income.range)
rm(agerange)
